{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/uploadservice.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UploadserviceService } from './uploadservice.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport * as HighCharts from 'highcharts';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'Image Search';\n  file = {};\n  files:string  []  =  [];\n  imgNameList = [];\n  jsonImageObj = [];\n  uploadForm: FormGroup;\n  queryId = '';\n  resultsCount : number;\n  uploadedImages : Array<string> = [];\n  addinputValue: string = \"\";\n  description: string = \"\";\n  localUrl: any;\n  selectedImages = [];\n  highest: string = \"\";\n  moderate: string = \"\";\n  lowest: string = \"\";\n  jsonExplainObj = [];\n  constructor(private uploadservice:UploadserviceService,private formBuilder: FormBuilder, private httpClient: HttpClient){}\n  runscript(){\n    this.resultsCount = 0;\n    this.imgNameList = []\n    const formData = new FormData();\n    formData.append('file', this.uploadForm.get('file').value);\n\n    //Display query image for user\n    //var reader = new FileReader();\n    //this.localUrl = reader.readAsDataURL(this.uploadForm.get('file').value);      \n\n    this.uploadservice.runscript(formData).subscribe(res =>{\n      this.jsonImageObj = [];\n      var matchedImages = res.body;\n      console.log(res.headers.get('qId'));\n      this.queryId = res.headers.get('qId');\n      this.jsonImageObj = JSON.parse(matchedImages.toString());\n      console.log('color weight: ',this.jsonImageObj[0].weight1)\n      console.log('foreground weight: ',this.jsonImageObj[0].weight2)\n      console.log('highlevel feature weight: ',this.jsonImageObj[0].weight3)\n      var color_wt = this.jsonImageObj[0].weight1;\n      var fg_wt = this.jsonImageObj[0].weight2;\n      var hf_wt = this.jsonImageObj[0].weight3;\n\n      if(color_wt > fg_wt && color_wt > hf_wt){\n        this.highest = 'color shape and texture';\n      }\n      else if(fg_wt > color_wt && fg_wt > hf_wt ){\n        this.highest = 'foreground';\n      }\n      else{\n        this.highest = 'semantic';\n      }\n      if(color_wt < fg_wt && color_wt < hf_wt){\n        this.lowest = 'color shape and texture';\n      }\n      else if(fg_wt < color_wt && fg_wt < hf_wt ){\n        this.lowest = 'foreground';\n      }\n      else{\n        this.lowest = 'semantic';\n      }\n      //Check for conditions when all are equal display everything as equal contribution\n      for (var i = 0; i < this.jsonImageObj.length; i++) {\n        this.imgNameList.push(this.jsonImageObj[i].name);\n      }      \n      this.resultsCount = this.imgNameList.length;\n    })\n  }\n  ngOnInit() {\n    this.uploadForm = this.formBuilder.group({\n      file: [''],\n      files: Array<any>()\n    });\n  }\n  fileChange(event) {\n    this.uploadedImages = []\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.uploadForm.get('file').setValue(file);\n      this.uploadedImages.push(file.name);\n      //Display query image\n      var reader = new FileReader();\n      reader.readAsDataURL(file); \n      reader.onload = (_event) => { \n        this.localUrl = reader.result; \n      }\n     }\n  }\n  upload(){\n    const formRepoImage = new FormData();\n    formRepoImage.append('file', this.uploadForm.get('file').value);\n    this.uploadservice.uploadImage(formRepoImage).subscribe(\n      (res) => console.log(res),\n      (err) => console.log(err)\n    );   \n  }\n  persistId(item){\n    const queryImage = new FormData();  \n    queryImage.append('file', this.uploadForm.get('file').value);\n    console.log(this.queryId);\n    var qId = this.queryId;\n    this.uploadservice.persistQueryObj(item,qId).subscribe(res =>{\n    var matchedImages = res;      \n    })\n  }\n  //Upload multiple images into mongo repository\n  fileChangeMultiple(event) {\n    var index  = 0;\n    this.uploadedImages = []\n    var images = []\n    const file = [] //event.target.files[0];\n    for(var i =  0; i <  event.target.files.length; i++)  {  \n        this.files.push(event.target.files[i]);\n        file.push(event.target.files[i])\n    }\n    images = event.target.files;\n    this.uploadForm.get('files').setValue(file);\n    //this.uploadForm.get('files').setValue(images);\n    //Push the file name into input field\n    if (event.target.files.length > 0) {\n      while(index < event.target.files.length){\n        const file = event.target.files[index];\n        this.uploadedImages.push(file.name);\n        index++;\n      }      \n     }\n  }\n  uploadMultiple(){\n    const formDataMultiple = new FormData();\n    //formDataMultiple.append('files[]', this.uploadForm.get('file').value);\n    formDataMultiple.append('files[]', this.uploadForm.get('files').value);\n    this.uploadservice.uploadMultiple(formDataMultiple).subscribe(res =>{\n      var resp = res;      \n    })\n    //Set the values of files into formData, currently data is set as String\n    //Not object, check and set properly\n  }\n  explainImage(){\n    this.uploadservice.explainImage().subscribe(res =>{\n      this.jsonExplainObj = res;  \n    })\n    console.log(this.jsonExplainObj);\n  }\n  displayChart(item) {\n    //this.description= `The selected image matches ${item.color} percentage with color, shape and texture of the query image.`\n    this.description= `The selected image matches 90 percentage with color, 5 percent with High level semantic deature and 5 percent with foreground.`\n    console.log(item)\n    HighCharts.chart('pieChart', {\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: 'pie'\n      },\n      title: {\n        text: 'Feature Contribution'\n      },\n      tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: true,\n            format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n          }\n        }\n      },\n      series: [{\n        name: '',\n        colorByPoint: true,\n        type: undefined,\n        data: [{\n          name: 'Color',\n          y: 90,//parseFloat(item.color),\n          sliced: true,\n          selected: true\n        }, {\n          name: 'Foreground',\n          y: 5,//parseFloat(item.fg),\n          sliced: true\n        },\n        {\n          name: 'Semantic Feature',\n          y: 5//parseFloat(item.fg)\n        }\n      ]\n      }]\n    });\n  }\n}\n\n","<div class=\"height100\">\n  <form [formGroup] = \"uploadForm\" enctype=\"multipart/form-data\">\n    <div class=\"header\">\n      <div class=\"label-group\">\n        <div class=\"header-label\">\n          Content based Image Search\n        </div>\n        <div class=\"sub-header-label\">\n          Driven by XAI\n        </div>\n      </div>\n      <div class=\"search-outer\">\n        <div class=\"search-container box-shadow\">\n          <div>\n            <img src=\"/assets/images/search.svg\" alt=\"search\" />\n          </div>\n          <div *ngFor=\"let image of uploadedImages\"  class=\"image-items \">\n             {{image}}\n          </div>          \n          <div class=\"btn-group\">\n            <div class=\"input-container\">\n              <input type=\"file\" name=\"file\" (change)=\"fileChange($event)\" id=\"file\" multiple accept=\"image/*\" class=\"file-input\">\n              <label for=\"file\"><img src=\"/assets/images/upload.svg\"/></label> \n            </div>\n            <button class=\"search-btn\" (click)=\"runscript()\">Search</button>\n            <button class=\"search-btn\" (click)=\"explainImage()\">Explain</button>\n          </div> \n          <!--Upload multiple images and store the repository meta data into mongo-->\n          <!-- <div class=\"btn-group\">\n            <div class=\"input-container\">\n              <input type=\"file\" name=\"file\" (change)=\"fileChangeMultiple($event)\" id=\"file\" multiple accept=\"image/*\" class=\"file-input\">\n              <label for=\"file\"><img src=\"/assets/images/upload.svg\"/></label> \n            </div>\n            <button class=\"search-btn\"  (click)=\"runscript()\">Search</button>\n            <button class=\"search-btn\"  (click)=\"uploadMultiple()\">Upload</button>\n          </div> -->\n        </div>\n      </div>\n    </div>\n\n</form>\n  <!-- <div>\n    Show Image results based on search\n  </div> -->\n  <div class=\"results-count\">\n    <div class=\"count-circle\"> {{resultsCount || 0}}  </div>matching results.\n  </div>\n  <div class=\"row-info\" *ngIf=\"jsonImageObj.length\">\n    Below images are displayed based on color,foreground and high level semantic feature.\n    <!-- The {{highest}} feature has highest contribution & the {{lowest}} feature has lowest contribution.-->\n  </div>\n  <div class=\"results-container\">\n  <div class=\"image-row disable-scrollbars\">\n    <div *ngFor=\"let item of jsonImageObj\" class=\"image-item box-shadow\">\n  <!-- Uncomment the below line while building and deploying the code and comment the localhost:3000-->\n   <!--<div class=\"image\" [style.background-image]=\"'url(static/'+item.name+')'\"> </div>-->\n   <div class=\"image\" [style.background-image]=\"'url(http://localhost:3000/static/'+item.name+')'\"> </div>\n      <div class=\"image-button\">\n        <!--<input  type=\"button\" value=\"Explain\" class=\"btn btn-primary btn-block explain-btn\" (click)=\"displayChart(item);\"> -->\n        <!-- Uncomment below code when mongo as the repository metadata so that it can call persist query -->\n        <input  type=\"button\" value=\"Explain\" class=\"btn btn-primary btn-block explain-btn\" (click)=\"displayChart(item);persistId(item)\">\n        <div class=\"circles\">\n          <div> </div>\n          <div> </div>\n          <div> </div>  \n        </div>\n      </div>\n    </div> \n  </div>\n  <div class=\"image-desc box-shadow\" *ngIf=\"jsonImageObj.length\">\n    <div class=\"desc-label\">Query Image Comparision </div><br/>\n    <!--<img [src]=\"localUrl\" *ngIf=\"localUrl\" class=\"image query-image\">-->\n    <div class=\"query-image\" [style.background-image]=\"'url('+localUrl+')'\"> </div>\n   <div class=\"description\">\n      {{description}}\n    </div>\n      <div class=\"chart-container\" style=\"height: 500px; width: 390px\" id=\"pieChart\"></div>\n    </div>\n  </div>\n</div>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n//import { HighchartsChartComponent } from 'highcharts-angular';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Routes,RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadserviceService {\n  constructor(private http: HttpClient) {\n    \n  }\n  uploadImage(formData){\n    return this.http.post<any>('http://localhost:3000/fileupload', formData)\n  }\n  getImages(){\n    return this.http.get('lists',{});\n  }\n  runscript(formData){\n    return this.http.post<any>('http://localhost:3000/runscript',formData,{observe:\"response\", responseType: 'json'});\n\n  }\n  persistQueryObj(repoImg,qid){\n    var queryRepoList = []\n    queryRepoList.push(qid)\n    queryRepoList.push(repoImg)\n    return this.http.post<any>('http://localhost:3000/persistQueryObj', queryRepoList)\n  }\n  uploadMultiple(formData){\n    return this.http.post<any>('http://localhost:3000/uploadmultiple',formData);\n  }\n  explainImage(){\n    return this.http.get<any>('http://localhost:3000/explain',{responseType: 'json'});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}