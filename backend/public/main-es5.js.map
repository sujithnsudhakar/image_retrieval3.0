{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/uploadservice.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","uploadservice","formBuilder","httpClient","title","file","files","imgNameList","jsonImageObj","queryId","uploadedImages","addinputValue","description","selectedImages","highest","moderate","lowest","jsonExplainObj","resultsCount","formData","FormData","append","uploadForm","get","value","runscript","subscribe","res","matchedImages","body","console","log","headers","JSON","parse","toString","weight1","weight2","weight3","color_wt","fg_wt","hf_wt","i","length","push","name","group","Array","event","target","setValue","reader","FileReader","readAsDataURL","onload","_event","localUrl","result","formRepoImage","uploadImage","err","item","queryImage","qId","persistQueryObj","index","images","formDataMultiple","uploadMultiple","resp","explainImage","chart","plotBackgroundColor","plotBorderWidth","plotShadow","type","text","tooltip","pointFormat","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","format","series","colorByPoint","undefined","data","y","sliced","selected","fileChange","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","UploadserviceService","http","post","observe","responseType","repoImg","qid","queryRepoList","providedIn","environment","production","bootstrapModule","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgBU;;AACG;;AACH;;;;;;AADG;;AAAA;;;;;;AA8BX;;AACE;;AAEF;;;;;;;;AAGE;;AAGD;;AACG;;AAGE;;AAAoF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAApF;;AACA;;AACE;;AACA;;AACA;;AACF;;AACF;;AACF;;;;;;AAXkB;;AAAA;;;;;;AAapB;;AACE;;AAAwB;;AAAwB;;AAAM;;AAEtD;;AACD;;AACG;;AACF;;AACE;;AACF;;;;;;AALyB;;AAAA;;AAEvB;;AAAA;;;;QD/DOM,Y;AAkBX,4BAAoBC,aAApB,EAA+DC,WAA/D,EAAiGC,UAAjG,EAAuH;AAAA;;AAAnG,aAAAF,aAAA,GAAAA,aAAA;AAA2C,aAAAC,WAAA,GAAAA,WAAA;AAAkC,aAAAC,UAAA,GAAAA,UAAA;AAjBjG,aAAAC,KAAA,GAAQ,cAAR;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,KAAA,GAAqB,EAArB;AACA,aAAAC,WAAA,GAAc,EAAd;AACA,aAAAC,YAAA,GAAe,EAAf;AAEA,aAAAC,OAAA,GAAU,EAAV;AAEA,aAAAC,cAAA,GAAiC,EAAjC;AACA,aAAAC,aAAA,GAAwB,EAAxB;AACA,aAAAC,WAAA,GAAsB,EAAtB;AAEA,aAAAC,cAAA,GAAiB,EAAjB;AACA,aAAAC,OAAA,GAAkB,EAAlB;AACA,aAAAC,QAAA,GAAmB,EAAnB;AACA,aAAAC,MAAA,GAAiB,EAAjB;AACA,aAAAC,cAAA,GAAiB,EAAjB;AAC0H;;;;oCACjH;AAAA;;AACP,eAAKC,YAAL,GAAoB,CAApB;AACA,eAAKX,WAAL,GAAmB,EAAnB;AACA,cAAMY,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,kBAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAKC,UAAL,CAAgBC,GAAhB,CAAoB,MAApB,EAA4BC,KAApD,EAJO,CAMP;AACA;AACA;;AAEA,eAAKvB,aAAL,CAAmBwB,SAAnB,CAA6BN,QAA7B,EAAuCO,SAAvC,CAAiD,UAAAC,GAAG,EAAG;AACrD,iBAAI,CAACnB,YAAL,GAAoB,EAApB;AACA,gBAAIoB,aAAa,GAAGD,GAAG,CAACE,IAAxB;AACAC,mBAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,OAAJ,CAAYT,GAAZ,CAAgB,KAAhB,CAAZ;AACA,iBAAI,CAACd,OAAL,GAAekB,GAAG,CAACK,OAAJ,CAAYT,GAAZ,CAAgB,KAAhB,CAAf;AACA,iBAAI,CAACf,YAAL,GAAoByB,IAAI,CAACC,KAAL,CAAWN,aAAa,CAACO,QAAd,EAAX,CAApB;AACAL,mBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6B,KAAI,CAACvB,YAAL,CAAkB,CAAlB,EAAqB4B,OAAlD;AACAN,mBAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkC,KAAI,CAACvB,YAAL,CAAkB,CAAlB,EAAqB6B,OAAvD;AACAP,mBAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyC,KAAI,CAACvB,YAAL,CAAkB,CAAlB,EAAqB8B,OAA9D;AACA,gBAAIC,QAAQ,GAAG,KAAI,CAAC/B,YAAL,CAAkB,CAAlB,EAAqB4B,OAApC;AACA,gBAAII,KAAK,GAAG,KAAI,CAAChC,YAAL,CAAkB,CAAlB,EAAqB6B,OAAjC;AACA,gBAAII,KAAK,GAAG,KAAI,CAACjC,YAAL,CAAkB,CAAlB,EAAqB8B,OAAjC;;AAEA,gBAAGC,QAAQ,GAAGC,KAAX,IAAoBD,QAAQ,GAAGE,KAAlC,EAAwC;AACtC,mBAAI,CAAC3B,OAAL,GAAe,yBAAf;AACD,aAFD,MAGK,IAAG0B,KAAK,GAAGD,QAAR,IAAoBC,KAAK,GAAGC,KAA/B,EAAsC;AACzC,mBAAI,CAAC3B,OAAL,GAAe,YAAf;AACD,aAFI,MAGD;AACF,mBAAI,CAACA,OAAL,GAAe,UAAf;AACD;;AACD,gBAAGyB,QAAQ,GAAGC,KAAX,IAAoBD,QAAQ,GAAGE,KAAlC,EAAwC;AACtC,mBAAI,CAACzB,MAAL,GAAc,yBAAd;AACD,aAFD,MAGK,IAAGwB,KAAK,GAAGD,QAAR,IAAoBC,KAAK,GAAGC,KAA/B,EAAsC;AACzC,mBAAI,CAACzB,MAAL,GAAc,YAAd;AACD,aAFI,MAGD;AACF,mBAAI,CAACA,MAAL,GAAc,UAAd;AACD,aA9BoD,CA+BrD;;;AACA,iBAAK,IAAI0B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAI,CAAClC,YAAL,CAAkBmC,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AACjD,mBAAI,CAACnC,WAAL,CAAiBqC,IAAjB,CAAsB,KAAI,CAACpC,YAAL,CAAkBkC,CAAlB,EAAqBG,IAA3C;AACD;;AACD,iBAAI,CAAC3B,YAAL,GAAoB,KAAI,CAACX,WAAL,CAAiBoC,MAArC;AACD,WApCD;AAqCD;;;mCACU;AACT,eAAKrB,UAAL,GAAkB,KAAKpB,WAAL,CAAiB4C,KAAjB,CAAuB;AACvCzC,gBAAI,EAAE,CAAC,EAAD,CADiC;AAEvCC,iBAAK,EAAEyC,KAAK;AAF2B,WAAvB,CAAlB;AAID;;;mCACUC,K,EAAO;AAAA;;AAChB,eAAKtC,cAAL,GAAsB,EAAtB;;AACA,cAAIsC,KAAK,CAACC,MAAN,CAAa3C,KAAb,CAAmBqC,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,gBAAMtC,IAAI,GAAG2C,KAAK,CAACC,MAAN,CAAa3C,KAAb,CAAmB,CAAnB,CAAb;AACA,iBAAKgB,UAAL,CAAgBC,GAAhB,CAAoB,MAApB,EAA4B2B,QAA5B,CAAqC7C,IAArC;AACA,iBAAKK,cAAL,CAAoBkC,IAApB,CAAyBvC,IAAI,CAACwC,IAA9B,EAHiC,CAIjC;;AACA,gBAAIM,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,kBAAM,CAACE,aAAP,CAAqBhD,IAArB;;AACA8C,kBAAM,CAACG,MAAP,GAAgB,UAACC,MAAD,EAAY;AAC1B,oBAAI,CAACC,QAAL,GAAgBL,MAAM,CAACM,MAAvB;AACD,aAFD;AAGA;AACH;;;iCACK;AACJ,cAAMC,aAAa,GAAG,IAAItC,QAAJ,EAAtB;AACAsC,uBAAa,CAACrC,MAAd,CAAqB,MAArB,EAA6B,KAAKC,UAAL,CAAgBC,GAAhB,CAAoB,MAApB,EAA4BC,KAAzD;AACA,eAAKvB,aAAL,CAAmB0D,WAAnB,CAA+BD,aAA/B,EAA8ChC,SAA9C,CACE,UAACC,GAAD;AAAA,mBAASG,OAAO,CAACC,GAAR,CAAYJ,GAAZ,CAAT;AAAA,WADF,EAEE,UAACiC,GAAD;AAAA,mBAAS9B,OAAO,CAACC,GAAR,CAAY6B,GAAZ,CAAT;AAAA,WAFF;AAID;;;kCACSC,I,EAAI;AACZ,cAAMC,UAAU,GAAG,IAAI1C,QAAJ,EAAnB;AACA0C,oBAAU,CAACzC,MAAX,CAAkB,MAAlB,EAA0B,KAAKC,UAAL,CAAgBC,GAAhB,CAAoB,MAApB,EAA4BC,KAAtD;AACAM,iBAAO,CAACC,GAAR,CAAY,KAAKtB,OAAjB;AACA,cAAIsD,GAAG,GAAG,KAAKtD,OAAf;AACA,eAAKR,aAAL,CAAmB+D,eAAnB,CAAmCH,IAAnC,EAAwCE,GAAxC,EAA6CrC,SAA7C,CAAuD,UAAAC,GAAG,EAAG;AAC7D,gBAAIC,aAAa,GAAGD,GAApB;AACC,WAFD;AAGD,S,CACD;;;;2CACmBqB,K,EAAO;AACxB,cAAIiB,KAAK,GAAI,CAAb;AACA,eAAKvD,cAAL,GAAsB,EAAtB;AACA,cAAIwD,MAAM,GAAG,EAAb;AACA,cAAM7D,IAAI,GAAG,EAAb,CAJwB,CAIR;;AAChB,eAAI,IAAIqC,CAAC,GAAI,CAAb,EAAgBA,CAAC,GAAIM,KAAK,CAACC,MAAN,CAAa3C,KAAb,CAAmBqC,MAAxC,EAAgDD,CAAC,EAAjD,EAAsD;AAClD,iBAAKpC,KAAL,CAAWsC,IAAX,CAAgBI,KAAK,CAACC,MAAN,CAAa3C,KAAb,CAAmBoC,CAAnB,CAAhB;AACArC,gBAAI,CAACuC,IAAL,CAAUI,KAAK,CAACC,MAAN,CAAa3C,KAAb,CAAmBoC,CAAnB,CAAV;AACH;;AACDwB,gBAAM,GAAGlB,KAAK,CAACC,MAAN,CAAa3C,KAAtB;AACA,eAAKgB,UAAL,CAAgBC,GAAhB,CAAoB,OAApB,EAA6B2B,QAA7B,CAAsC7C,IAAtC,EAVwB,CAWxB;AACA;;AACA,cAAI2C,KAAK,CAACC,MAAN,CAAa3C,KAAb,CAAmBqC,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,mBAAMsB,KAAK,GAAGjB,KAAK,CAACC,MAAN,CAAa3C,KAAb,CAAmBqC,MAAjC,EAAwC;AACtC,kBAAMtC,KAAI,GAAG2C,KAAK,CAACC,MAAN,CAAa3C,KAAb,CAAmB2D,KAAnB,CAAb;AACA,mBAAKvD,cAAL,CAAoBkC,IAApB,CAAyBvC,KAAI,CAACwC,IAA9B;AACAoB,mBAAK;AACN;AACD;AACH;;;yCACa;AACZ,cAAME,gBAAgB,GAAG,IAAI/C,QAAJ,EAAzB,CADY,CAEZ;;AACA+C,0BAAgB,CAAC9C,MAAjB,CAAwB,SAAxB,EAAmC,KAAKC,UAAL,CAAgBC,GAAhB,CAAoB,OAApB,EAA6BC,KAAhE;AACA,eAAKvB,aAAL,CAAmBmE,cAAnB,CAAkCD,gBAAlC,EAAoDzC,SAApD,CAA8D,UAAAC,GAAG,EAAG;AAClE,gBAAI0C,IAAI,GAAG1C,GAAX;AACD,WAFD,EAJY,CAOZ;AACA;AACD;;;uCACW;AAAA;;AACV,eAAK1B,aAAL,CAAmBqE,YAAnB,GAAkC5C,SAAlC,CAA4C,UAAAC,GAAG,EAAG;AAChD,kBAAI,CAACV,cAAL,GAAsBU,GAAtB;AACD,WAFD;AAGAG,iBAAO,CAACC,GAAR,CAAY,KAAKd,cAAjB;AACD;;;qCACY4C,I,EAAM;AACjB;AACA,eAAKjD,WAAL;AACAkB,iBAAO,CAACC,GAAR,CAAY8B,IAAZ;AACA,2DAAiB,UAAjB,EAA6B;AAC3BU,iBAAK,EAAE;AACLC,iCAAmB,EAAE,IADhB;AAELC,6BAAe,EAAE,IAFZ;AAGLC,wBAAU,EAAE,KAHP;AAILC,kBAAI,EAAE;AAJD,aADoB;AAO3BvE,iBAAK,EAAE;AACLwE,kBAAI,EAAE;AADD,aAPoB;AAU3BC,mBAAO,EAAE;AACPC,yBAAW,EAAE;AADN,aAVkB;AAa3BC,uBAAW,EAAE;AACXC,iBAAG,EAAE;AACHC,gCAAgB,EAAE,IADf;AAEHC,sBAAM,EAAE,SAFL;AAGHC,0BAAU,EAAE;AACVC,yBAAO,EAAE,IADC;AAEVC,wBAAM,EAAE;AAFE;AAHT;AADM,aAbc;AAuB3BC,kBAAM,EAAE,CAAC;AACPzC,kBAAI,EAAE,EADC;AAEP0C,0BAAY,EAAE,IAFP;AAGPZ,kBAAI,EAAEa,SAHC;AAIPC,kBAAI,EAAE,CAAC;AACL5C,oBAAI,EAAE,OADD;AAEL6C,iBAAC,EAAE,EAFE;AAGLC,sBAAM,EAAE,IAHH;AAILC,wBAAQ,EAAE;AAJL,eAAD,EAKH;AACD/C,oBAAI,EAAE,YADL;AAED6C,iBAAC,EAAE,CAFF;AAGDC,sBAAM,EAAE;AAHP,eALG,EAUN;AACE9C,oBAAI,EAAE,kBADR;AAEE6C,iBAAC,EAAE,CAFL,CAEM;;AAFN,eAVM;AAJC,aAAD;AAvBmB,WAA7B;AA4CD;;;;;;;uBA9LU1F,Y,EAAY,4I,EAAA,2H,EAAA,gI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,ssC;AAAA;AAAA;ACXzB;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACA;;AAGA;;AACE;;AACE;;AAA+B;AAAA,mBAAU,IAAA6F,UAAA,QAAV;AAA4B,WAA5B;;AAA/B;;AACA;;AAAkB;;AAAsC;;AAC1D;;AACA;;AAA2B;AAAA,mBAAS,IAAApE,SAAA,EAAT;AAAoB,WAApB;;AAAsB;;AAAM;;AACvD;;AAA2B;AAAA,mBAAS,IAAA6C,YAAA,EAAT;AAAuB,WAAvB;;AAAyB;;AAAO;;AAC7D;;AAUF;;AACF;;AACF;;AAEJ;;AAIE;;AACE;;AAA2B;;AAAuB;;AAAM;;AAC1D;;AACA;;AAIA;;AACA;;AACE;;AAeF;;AACA;;AASA;;AACF;;AACA;;;;AA/EQ;;AAAA;;AAeO;;AAAA;;AA6BgB;;AAAA;;AAEP;;AAAA;;AAMf;;AAAA;;AAgB4B;;AAAA;;;;;;;;;sED1DxBtE,Y,EAAY;cALxB,uDAKwB;eALd;AACT8F,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEXzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,oE,CAEA;;;QAsBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBANJ,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,kEAJO,CAMI;;;;0HAGFA,S,EAAS;AAAA,uBAXlB,2DAWkB;AAXN,kBAGZ,uEAHY,EAIZ,oEAJY,EAKZ,qEALY,EAMZ,kEANY;AAWM,O;AALC,K;;;;;sEAKVA,S,EAAS;cAbrB,sDAaqB;eAbZ;AACRC,sBAAY,EAAE,CACZ,2DADY,CADN;AAIRnG,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,kEAJO,CAJD;AAURoG,mBAAS,EAAE,EAVH;AAWRC,mBAAS,EAAE,CAAC,2DAAD;AAXH,S;AAaY,Q;;;;;;;;;;;;;;;;;;ACxBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,oB;AACX,oCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAEnB;;;;oCACWnF,Q,EAAQ;AAClB,iBAAO,KAAKmF,IAAL,CAAUC,IAAV,CAAoB,kCAApB,EAAwDpF,QAAxD,CAAP;AACD;;;oCACQ;AACP,iBAAO,KAAKmF,IAAL,CAAU/E,GAAV,CAAc,OAAd,EAAsB,EAAtB,CAAP;AACD;;;kCACSJ,Q,EAAQ;AAChB,iBAAO,KAAKmF,IAAL,CAAUC,IAAV,CAAoB,iCAApB,EAAsDpF,QAAtD,EAA+D;AAACqF,mBAAO,EAAC,UAAT;AAAqBC,wBAAY,EAAE;AAAnC,WAA/D,CAAP;AAED;;;wCACeC,O,EAAQC,G,EAAG;AACzB,cAAIC,aAAa,GAAG,EAApB;AACAA,uBAAa,CAAChE,IAAd,CAAmB+D,GAAnB;AACAC,uBAAa,CAAChE,IAAd,CAAmB8D,OAAnB;AACA,iBAAO,KAAKJ,IAAL,CAAUC,IAAV,CAAoB,uCAApB,EAA6DK,aAA7D,CAAP;AACD;;;uCACczF,Q,EAAQ;AACrB,iBAAO,KAAKmF,IAAL,CAAUC,IAAV,CAAoB,sCAApB,EAA2DpF,QAA3D,CAAP;AACD;;;uCACW;AACV,iBAAO,KAAKmF,IAAL,CAAU/E,GAAV,CAAmB,+BAAnB,EAAmD;AAACkF,wBAAY,EAAE;AAAf,WAAnD,CAAP;AACD;;;;;;;uBAzBUJ,oB,EAAoB,uH;AAAA,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB,K;AAAA,kBAFnB;;;;;sEAEDA,oB,EAAoB;cAHhC,wDAGgC;eAHrB;AACVQ,oBAAU,EAAE;AADF,S;AAGqB,Q;;;;;;;;;;;;;;;;;;;;;;ACNjC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAApD,GAAG;AAAA,aAAI9B,OAAO,CAACmF,KAAR,CAAcrD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UploadserviceService } from './uploadservice.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport * as HighCharts from 'highcharts';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'Image Search';\n  file = {};\n  files:string  []  =  [];\n  imgNameList = [];\n  jsonImageObj = [];\n  uploadForm: FormGroup;\n  queryId = '';\n  resultsCount : number;\n  uploadedImages : Array<string> = [];\n  addinputValue: string = \"\";\n  description: string = \"\";\n  localUrl: any;\n  selectedImages = [];\n  highest: string = \"\";\n  moderate: string = \"\";\n  lowest: string = \"\";\n  jsonExplainObj = [];\n  constructor(private uploadservice:UploadserviceService,private formBuilder: FormBuilder, private httpClient: HttpClient){}\n  runscript(){\n    this.resultsCount = 0;\n    this.imgNameList = []\n    const formData = new FormData();\n    formData.append('file', this.uploadForm.get('file').value);\n\n    //Display query image for user\n    //var reader = new FileReader();\n    //this.localUrl = reader.readAsDataURL(this.uploadForm.get('file').value);      \n\n    this.uploadservice.runscript(formData).subscribe(res =>{\n      this.jsonImageObj = [];\n      var matchedImages = res.body;\n      console.log(res.headers.get('qId'));\n      this.queryId = res.headers.get('qId');\n      this.jsonImageObj = JSON.parse(matchedImages.toString());\n      console.log('color weight: ',this.jsonImageObj[0].weight1)\n      console.log('foreground weight: ',this.jsonImageObj[0].weight2)\n      console.log('highlevel feature weight: ',this.jsonImageObj[0].weight3)\n      var color_wt = this.jsonImageObj[0].weight1;\n      var fg_wt = this.jsonImageObj[0].weight2;\n      var hf_wt = this.jsonImageObj[0].weight3;\n\n      if(color_wt > fg_wt && color_wt > hf_wt){\n        this.highest = 'color shape and texture';\n      }\n      else if(fg_wt > color_wt && fg_wt > hf_wt ){\n        this.highest = 'foreground';\n      }\n      else{\n        this.highest = 'semantic';\n      }\n      if(color_wt < fg_wt && color_wt < hf_wt){\n        this.lowest = 'color shape and texture';\n      }\n      else if(fg_wt < color_wt && fg_wt < hf_wt ){\n        this.lowest = 'foreground';\n      }\n      else{\n        this.lowest = 'semantic';\n      }\n      //Check for conditions when all are equal display everything as equal contribution\n      for (var i = 0; i < this.jsonImageObj.length; i++) {\n        this.imgNameList.push(this.jsonImageObj[i].name);\n      }      \n      this.resultsCount = this.imgNameList.length;\n    })\n  }\n  ngOnInit() {\n    this.uploadForm = this.formBuilder.group({\n      file: [''],\n      files: Array<any>()\n    });\n  }\n  fileChange(event) {\n    this.uploadedImages = []\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.uploadForm.get('file').setValue(file);\n      this.uploadedImages.push(file.name);\n      //Display query image\n      var reader = new FileReader();\n      reader.readAsDataURL(file); \n      reader.onload = (_event) => { \n        this.localUrl = reader.result; \n      }\n     }\n  }\n  upload(){\n    const formRepoImage = new FormData();\n    formRepoImage.append('file', this.uploadForm.get('file').value);\n    this.uploadservice.uploadImage(formRepoImage).subscribe(\n      (res) => console.log(res),\n      (err) => console.log(err)\n    );   \n  }\n  persistId(item){\n    const queryImage = new FormData();  \n    queryImage.append('file', this.uploadForm.get('file').value);\n    console.log(this.queryId);\n    var qId = this.queryId;\n    this.uploadservice.persistQueryObj(item,qId).subscribe(res =>{\n    var matchedImages = res;      \n    })\n  }\n  //Upload multiple images into mongo repository\n  fileChangeMultiple(event) {\n    var index  = 0;\n    this.uploadedImages = []\n    var images = []\n    const file = [] //event.target.files[0];\n    for(var i =  0; i <  event.target.files.length; i++)  {  \n        this.files.push(event.target.files[i]);\n        file.push(event.target.files[i])\n    }\n    images = event.target.files;\n    this.uploadForm.get('files').setValue(file);\n    //this.uploadForm.get('files').setValue(images);\n    //Push the file name into input field\n    if (event.target.files.length > 0) {\n      while(index < event.target.files.length){\n        const file = event.target.files[index];\n        this.uploadedImages.push(file.name);\n        index++;\n      }      \n     }\n  }\n  uploadMultiple(){\n    const formDataMultiple = new FormData();\n    //formDataMultiple.append('files[]', this.uploadForm.get('file').value);\n    formDataMultiple.append('files[]', this.uploadForm.get('files').value);\n    this.uploadservice.uploadMultiple(formDataMultiple).subscribe(res =>{\n      var resp = res;      \n    })\n    //Set the values of files into formData, currently data is set as String\n    //Not object, check and set properly\n  }\n  explainImage(){\n    this.uploadservice.explainImage().subscribe(res =>{\n      this.jsonExplainObj = res;  \n    })\n    console.log(this.jsonExplainObj);\n  }\n  displayChart(item) {\n    //this.description= `The selected image matches ${item.color} percentage with color, shape and texture of the query image.`\n    this.description= `The selected image matches 90 percentage with color, 5 percent with High level semantic deature and 5 percent with foreground.`\n    console.log(item)\n    HighCharts.chart('pieChart', {\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: 'pie'\n      },\n      title: {\n        text: 'Feature Contribution'\n      },\n      tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: true,\n            format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n          }\n        }\n      },\n      series: [{\n        name: '',\n        colorByPoint: true,\n        type: undefined,\n        data: [{\n          name: 'Color',\n          y: 90,//parseFloat(item.color),\n          sliced: true,\n          selected: true\n        }, {\n          name: 'Foreground',\n          y: 5,//parseFloat(item.fg),\n          sliced: true\n        },\n        {\n          name: 'Semantic Feature',\n          y: 5//parseFloat(item.fg)\n        }\n      ]\n      }]\n    });\n  }\n}\n\n","<div class=\"height100\">\n  <form [formGroup] = \"uploadForm\" enctype=\"multipart/form-data\">\n    <div class=\"header\">\n      <div class=\"label-group\">\n        <div class=\"header-label\">\n          Content based Image Search\n        </div>\n        <div class=\"sub-header-label\">\n          Driven by XAI\n        </div>\n      </div>\n      <div class=\"search-outer\">\n        <div class=\"search-container box-shadow\">\n          <div>\n            <img src=\"/assets/images/search.svg\" alt=\"search\" />\n          </div>\n          <div *ngFor=\"let image of uploadedImages\"  class=\"image-items \">\n             {{image}}\n          </div>          \n          <div class=\"btn-group\">\n            <div class=\"input-container\">\n              <input type=\"file\" name=\"file\" (change)=\"fileChange($event)\" id=\"file\" multiple accept=\"image/*\" class=\"file-input\">\n              <label for=\"file\"><img src=\"/assets/images/upload.svg\"/></label> \n            </div>\n            <button class=\"search-btn\" (click)=\"runscript()\">Search</button>\n            <button class=\"search-btn\" (click)=\"explainImage()\">Explain</button>\n          </div> \n          <!--Upload multiple images and store the repository meta data into mongo-->\n          <!-- <div class=\"btn-group\">\n            <div class=\"input-container\">\n              <input type=\"file\" name=\"file\" (change)=\"fileChangeMultiple($event)\" id=\"file\" multiple accept=\"image/*\" class=\"file-input\">\n              <label for=\"file\"><img src=\"/assets/images/upload.svg\"/></label> \n            </div>\n            <button class=\"search-btn\"  (click)=\"runscript()\">Search</button>\n            <button class=\"search-btn\"  (click)=\"uploadMultiple()\">Upload</button>\n          </div> -->\n        </div>\n      </div>\n    </div>\n\n</form>\n  <!-- <div>\n    Show Image results based on search\n  </div> -->\n  <div class=\"results-count\">\n    <div class=\"count-circle\"> {{resultsCount || 0}}  </div>matching results.\n  </div>\n  <div class=\"row-info\" *ngIf=\"jsonImageObj.length\">\n    Below images are displayed based on color,foreground and high level semantic feature.\n    <!-- The {{highest}} feature has highest contribution & the {{lowest}} feature has lowest contribution.-->\n  </div>\n  <div class=\"results-container\">\n  <div class=\"image-row disable-scrollbars\">\n    <div *ngFor=\"let item of jsonImageObj\" class=\"image-item box-shadow\">\n  <!-- Uncomment the below line while building and deploying the code and comment the localhost:3000-->\n   <!--<div class=\"image\" [style.background-image]=\"'url(static/'+item.name+')'\"> </div>-->\n   <div class=\"image\" [style.background-image]=\"'url(http://localhost:3000/static/'+item.name+')'\"> </div>\n      <div class=\"image-button\">\n        <!--<input  type=\"button\" value=\"Explain\" class=\"btn btn-primary btn-block explain-btn\" (click)=\"displayChart(item);\"> -->\n        <!-- Uncomment below code when mongo as the repository metadata so that it can call persist query -->\n        <input  type=\"button\" value=\"Explain\" class=\"btn btn-primary btn-block explain-btn\" (click)=\"displayChart(item);persistId(item)\">\n        <div class=\"circles\">\n          <div> </div>\n          <div> </div>\n          <div> </div>  \n        </div>\n      </div>\n    </div> \n  </div>\n  <div class=\"image-desc box-shadow\" *ngIf=\"jsonImageObj.length\">\n    <div class=\"desc-label\">Query Image Comparision </div><br/>\n    <!--<img [src]=\"localUrl\" *ngIf=\"localUrl\" class=\"image query-image\">-->\n    <div class=\"query-image\" [style.background-image]=\"'url('+localUrl+')'\"> </div>\n   <div class=\"description\">\n      {{description}}\n    </div>\n      <div class=\"chart-container\" style=\"height: 500px; width: 390px\" id=\"pieChart\"></div>\n    </div>\n  </div>\n</div>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n//import { HighchartsChartComponent } from 'highcharts-angular';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Routes,RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadserviceService {\n  constructor(private http: HttpClient) {\n    \n  }\n  uploadImage(formData){\n    return this.http.post<any>('http://localhost:3000/fileupload', formData)\n  }\n  getImages(){\n    return this.http.get('lists',{});\n  }\n  runscript(formData){\n    return this.http.post<any>('http://localhost:3000/runscript',formData,{observe:\"response\", responseType: 'json'});\n\n  }\n  persistQueryObj(repoImg,qid){\n    var queryRepoList = []\n    queryRepoList.push(qid)\n    queryRepoList.push(repoImg)\n    return this.http.post<any>('http://localhost:3000/persistQueryObj', queryRepoList)\n  }\n  uploadMultiple(formData){\n    return this.http.post<any>('http://localhost:3000/uploadmultiple',formData);\n  }\n  explainImage(){\n    return this.http.get<any>('http://localhost:3000/explain',{responseType: 'json'});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}